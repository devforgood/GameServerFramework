// Copyright 2015 The gRPC Authors
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.
syntax = "proto3";

option java_multiple_files = true;
option java_package = "io.grpc.gamechat";
option java_outer_classname = "GameChatProto";
option objc_class_prefix = "HLW";

package GameChat;

// The greeting service definition.
service ChatService {
  // Sends a greeting
  rpc SayHello (HelloRequest) returns (HelloReply) {}

  rpc CreateRoom(CreateRoomRequest) returns (stream ChatMessage) {}
  rpc JoinRoom(JoinRoomRequest) returns (stream ChatMessage) {}
  rpc SendChat(SendChatRequest) returns (SendChatReply) {}
  rpc GetChatRooms(GetChatRoomsRequest) returns (GetChatRoomsReply) {}
  rpc LeaveRoom(LeaveRoomRequest) returns (LeaveRoomReply) {}
}

// The request message containing the user's name.
message HelloRequest {
  string name = 1;
}

// The response message containing the greetings
message HelloReply {
  string message = 1;
}


// chat
enum ErrorCode
{
  Success = 0;
  LostSession = 1;
  NotExist = 2;
}

enum MessageType
{
  Normal = 0;
  Attachment = 1;
}

message ChatMessage {
  ErrorCode code = 1;
  string room_id = 2;
  string sender_name = 3;
  string message = 4;
  MessageType message_type = 5;
}

message CreateRoomRequest {
  string room_name = 1;
  string sender_name = 2;
}
message JoinRoomRequest {
  string room_id = 1;
  string sender_name = 2;
}

message SendChatRequest {
  string room_id = 1;
  string message = 2;
  MessageType message_type = 3;
}

message SendChatReply {
  ErrorCode code = 1;
}

enum ChatRoomState
{
  None = 0;
  Available = 1;
  Full = 2;
}

message ChatRoom {
  string room_id = 1;
  string room_name = 2;
  ChatRoomState state = 3;
  int32 create_time = 4;
}

message GetChatRoomsRequest {
}

message GetChatRoomsReply {
  ErrorCode code = 1;
  repeated ChatRoom rooms = 2;
}

message LeaveRoomRequest {
}

message LeaveRoomReply {
  ErrorCode code = 1;
}
