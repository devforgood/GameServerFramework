// <auto-generated>
//  automatically generated by the FlatBuffers compiler, do not modify
// </auto-generated>

namespace syncnet
{

using global::System;
using global::System.Collections.Generic;
using global::FlatBuffers;

public struct DebugRaycast : IFlatbufferObject
{
  private Table __p;
  public ByteBuffer ByteBuffer { get { return __p.bb; } }
  public static void ValidateVersion() { FlatBufferConstants.FLATBUFFERS_1_12_0(); }
  public static DebugRaycast GetRootAsDebugRaycast(ByteBuffer _bb) { return GetRootAsDebugRaycast(_bb, new DebugRaycast()); }
  public static DebugRaycast GetRootAsDebugRaycast(ByteBuffer _bb, DebugRaycast obj) { return (obj.__assign(_bb.GetInt(_bb.Position) + _bb.Position, _bb)); }
  public void __init(int _i, ByteBuffer _bb) { __p = new Table(_i, _bb); }
  public DebugRaycast __assign(int _i, ByteBuffer _bb) { __init(_i, _bb); return this; }

  public syncnet.Vec3? StartPos { get { int o = __p.__offset(4); return o != 0 ? (syncnet.Vec3?)(new syncnet.Vec3()).__assign(o + __p.bb_pos, __p.bb) : null; } }
  public syncnet.Vec3? EndPos { get { int o = __p.__offset(6); return o != 0 ? (syncnet.Vec3?)(new syncnet.Vec3()).__assign(o + __p.bb_pos, __p.bb) : null; } }

  public static void StartDebugRaycast(FlatBufferBuilder builder) { builder.StartTable(2); }
  public static void AddStartPos(FlatBufferBuilder builder, Offset<syncnet.Vec3> startPosOffset) { builder.AddStruct(0, startPosOffset.Value, 0); }
  public static void AddEndPos(FlatBufferBuilder builder, Offset<syncnet.Vec3> endPosOffset) { builder.AddStruct(1, endPosOffset.Value, 0); }
  public static Offset<syncnet.DebugRaycast> EndDebugRaycast(FlatBufferBuilder builder) {
    int o = builder.EndTable();
    return new Offset<syncnet.DebugRaycast>(o);
  }
};


}
