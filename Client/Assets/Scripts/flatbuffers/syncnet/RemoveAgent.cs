// <auto-generated>
//  automatically generated by the FlatBuffers compiler, do not modify
// </auto-generated>

namespace syncnet
{

using global::System;
using global::System.Collections.Generic;
using global::FlatBuffers;

public struct RemoveAgent : IFlatbufferObject
{
  private Table __p;
  public ByteBuffer ByteBuffer { get { return __p.bb; } }
  public static void ValidateVersion() { FlatBufferConstants.FLATBUFFERS_1_12_0(); }
  public static RemoveAgent GetRootAsRemoveAgent(ByteBuffer _bb) { return GetRootAsRemoveAgent(_bb, new RemoveAgent()); }
  public static RemoveAgent GetRootAsRemoveAgent(ByteBuffer _bb, RemoveAgent obj) { return (obj.__assign(_bb.GetInt(_bb.Position) + _bb.Position, _bb)); }
  public void __init(int _i, ByteBuffer _bb) { __p = new Table(_i, _bb); }
  public RemoveAgent __assign(int _i, ByteBuffer _bb) { __init(_i, _bb); return this; }

  public int AgentId { get { int o = __p.__offset(4); return o != 0 ? __p.bb.GetInt(o + __p.bb_pos) : (int)0; } }

  public static Offset<syncnet.RemoveAgent> CreateRemoveAgent(FlatBufferBuilder builder,
      int agentId = 0) {
    builder.StartTable(1);
    RemoveAgent.AddAgentId(builder, agentId);
    return RemoveAgent.EndRemoveAgent(builder);
  }

  public static void StartRemoveAgent(FlatBufferBuilder builder) { builder.StartTable(1); }
  public static void AddAgentId(FlatBufferBuilder builder, int agentId) { builder.AddInt(0, agentId, 0); }
  public static Offset<syncnet.RemoveAgent> EndRemoveAgent(FlatBufferBuilder builder) {
    int o = builder.EndTable();
    return new Offset<syncnet.RemoveAgent>(o);
  }
};


}
